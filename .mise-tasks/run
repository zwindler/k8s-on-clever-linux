#!/bin/bash

# Main script to setup and run Kubernetes cluster
set -e

# Source environment variables
source .env

echo "🚀 Starting Kubernetes cluster setup..."
echo "Kubernetes version: $K8S_VERSION"
echo "Run './versions.sh' to see all configured versions"
echo ""

# Step 1: Setup binaries and tools
echo "📦 Step 1: Setting up binaries..."
./setup-binaries.sh

echo ""

# Step 2: Generate certificates
echo "🔐 Step 2: Generating certificates..."
./generate-certs.sh

echo ""

# Step 3: Setup kubeconfig
echo "⚙️  Step 3: Setting up kubeconfig..."
./setup-kubeconfig.sh

echo ""

# Step 4: Start etcd
echo "💾 Step 4: Starting etcd..."
./start-etcd.sh

echo ""

# Step 5: Start control plane
echo "🎛️  Step 5: Starting control plane..."
./start-control-plane.sh

echo ""

# Step 6: Setup RBAC for worker nodes
echo "🔒 Step 6: Setting up RBAC for worker nodes..."
./setup-node-rbac.sh

echo ""

# Step 7: Generate bootstrap token
echo "🔑 Step 7: Generating bootstrap token..."
./generate-bootstrap-token.sh

echo ""

# Step 8: Generate kube-proxy certificates
echo "🔐 Step 8: Generating kube-proxy certificates..."
./generate-kubeproxy-certs.sh

echo ""

# Step 9: Generate worker setup script
echo "📝 Step 9: Generating worker setup script..."
./generate-worker-script.sh

echo ""

# Step 10: Start additional services
echo "🌐 Step 10: Starting additional services..."
./start-services.sh

echo ""
echo "✅ Kubernetes cluster setup complete!"
echo ""
echo "🔗 Available endpoints:"
echo "  • Kubernetes API: https://127.0.0.1:4040"
echo "  • HTTP Server: http://0.0.0.0:8080"
echo ""
echo "📋 To add worker nodes:"
echo "  1. Copy the generated setup-worker-node.sh to your external worker node"
echo "  2. Edit NODE_NAME and NODE_IP in the script"
echo "  3. Run the script with sudo privileges"
echo "  4. The script includes all necessary certificates and configurations"
echo ""
echo "🔍 Check cluster status:"
echo "  bin/kubectl get nodes"
echo "  bin/kubectl cluster-info"
echo ""
echo "📄 Check component logs:"
echo "  ./logs.sh                    # Show log status"
echo "  ./logs.sh tail <component>   # Follow logs"
echo "  ./logs.sh errors             # Show recent errors"
echo ""
echo "⚙️  Configuration:"
echo "  ./versions.sh                # Show current versions"
echo "  Edit .env file to update versions"

# Keep the script running
wait

