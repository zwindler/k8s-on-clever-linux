#!/bin/bash

# Run script for Kubernetes cluster - handles dynamic parts that run on each restart
set -e

# Source environment variables
source helpers/.env

echo "🚀 Starting Kubernetes cluster..."
echo "Kubernetes version: $K8S_VERSION"
echo ""
echo "⚡ Using Clever Cloud workers for process management"
echo "   Services are automatically managed by systemd"
echo "   Static components (binaries, certs) were prepared during build phase"
echo ""

# Step 1: Generate bootstrap token (dynamic, changes on each restart)
echo "🔑 Step 1: Generating bootstrap token..."
./run-scripts/generate-bootstrap-token.sh

echo ""

# Step 2: Setup RBAC for worker nodes (requires API server to be running)
echo "🔒 Step 2: Setting up RBAC for worker nodes..."
./run-scripts/setup-node-rbac.sh

echo ""

# Step 3: Generate worker setup script (dynamic, includes fresh tokens)
echo "📝 Step 3: Generating worker setup script..."
./run-scripts/generate-worker-script.sh

echo ""
echo "✅ Kubernetes cluster startup complete!"
echo ""
echo "🔧 Running with Clever Cloud workers:"
echo "  • Worker 0: etcd database"
echo "  • Worker 1: kube-apiserver"
echo "  • Worker 2: kube-controller-manager"
echo "  • Worker 3: kube-scheduler"
echo "  • Worker 4: HTTP server"
echo ""
echo "📊 Monitor workers:"
echo "  clever logs              # View all logs"
echo "  clever logs --follow     # Follow logs in real-time"
echo ""
echo "📋 To add worker nodes:"
echo "  1. Copy the generated setup-worker-node.sh to your external worker node"
echo "  2. Edit NODE_NAME and NODE_IP in the script"
echo "  3. Run the script with sudo privileges"
echo "  4. The script includes all necessary certificates and configurations"
echo ""
echo "🔍 Check cluster status:"
echo "  bin/kubectl get nodes"
echo "  bin/kubectl cluster-info"
echo ""
echo "⚙️  Configuration:"
echo "  helpers/versions.sh          # Show current versions"
echo "  Edit helpers/.env file to update versions"
echo ""
echo "✅ Startup complete! Workers are managed by Clever Cloud systemd."
